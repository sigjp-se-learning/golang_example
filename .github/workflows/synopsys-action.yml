# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.
name: Synopsys Security Testing

on:
  push:
    # At this time, it is recommended to run Polaris only on pushes to main branches
    # Pull request analysis will be supported by Polaris in the future
    branches: [ "master" ]

  pull_request:
    branches: [ "master" ]

jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Setup Go 1.19
        uses: actions/setup-go@v5
        with:
          # Semantic version range syntax or exact version of Go
          go-version: '1.19.x'
      - name: Synopsys Action
        uses: synopsys-sig/synopsys-action@v1.9.0
        with:
          #------------------------------------------COVERITY-----------------------------------------
          #coverity_url: ${{ secrets.COVERITY_URL }}
          #coverity_user: ${{ secrets.COVERITY_USER }}
          #coverity_passphrase: ${{ secrets.COVERITY_PASSPHRASE }}

          #------------------------------------------BLACKDUCK----------------------------------------
          #blackduck_token: ${{ secrets.BLACKDUCK_API_TOKEN }}
          #blackduck_url: ${{ secrets.BLACKDUCK_URL }}

          #------------------------------------------POLARIS------------------------------------------
          polaris_server_url: ${{ secrets.POLARIS_SERVER_URL }}
          polaris_access_token: ${{ secrets.POLARIS_ACCESS_TOKEN }}
          polaris_application_name: ${{ secrets.POLARIS_APPLICATION_NAME }}
          polaris_project_name: "go"
          polaris_assessment_types: "SCA,SAST"

          ### SARIF report generation and upload to GitHub Adavanced Security Tab: Uncomment below to enable
          polaris_reports_sarif_create: true
          #polaris_reports_sarif_file_path: '/Users/tmp/report.sarif.json' # File path (including file name) where SARIF report is created.
          #polaris_reports_sarif_severities: "CRITICAL,HIGH"
          polaris_reports_sarif_groupSCAIssues: true 
          polaris_reports_sarif_issue_types: 'SCA,SAST' 
          polaris_upload_sarif_report: true 
          github_token: ${{ secrets.GITHUB_TOKEN }} # Required when polaris_upload_sarif_report is set as true
